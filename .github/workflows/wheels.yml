name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
  release:
    types:
      - published

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.name }}
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        name: [ "macOS (x86_64)", "macOS (arm64)", "iOS"]
        include:
          - name: macOS (x86_64)
            platform: macos
            runs-on: macos-13
            archs: auto
          - name: macOS (arm64)
            platform: macos
            runs-on: macos-latest
            archs: auto,universal2
          - name: iOS
            platform: ios
            runs-on: macos-latest
            archs: auto

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    #- uses: astral-sh/setup-uv@v4

    - name: Set up Python
      uses: actions/setup-python@v5.4.0
      with:
        python-version: "3.x"

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v2
      with:
        cmake-version: '3.31.x'

    - name: Install cibuildwheel
      run: |
        python -m pip install -U pip
        # Use a branch while iOS support is in development and test-sources is unpublished.
        # python -m pip install cibuildwheel==3.0.0
        python -m pip install git+https://github.com/freakboy3742/cibuildwheel.git@ios-support

    - name: iOS testing set workaround
      if: matrix.platform == 'ios'
      run: |
        # Temp workaround - make sure there is an iOS test devices directory
        mkdir -p /Users/runner/Library/Developer/XCTestDevices

    - name: Build wheels
      run: python -m cibuildwheel
      env:
        CIBW_PLATFORM: ${{ matrix.platform }}
        CIBW_ARCHS: ${{ matrix.archs }}
        CIBW_BUILD: "cp*"
        CIBW_BUILD_FRONTEND: build
        CIBW_BUILD_VERBOSITY: 1

#    - uses: pypa/cibuildwheel@v2.22
#      env:
#        CIBW_ENABLE: cpython-prerelease
#        CIBW_ARCHS_WINDOWS: auto ARM64

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.runs-on }}
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment: pypi
    permissions:
      id-token: write
      attestations: write

    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        merge-multiple: true
        path: dist

    - name: Generate artifact attestation for sdist and wheels
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: "dist/*"

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        attestations: true
